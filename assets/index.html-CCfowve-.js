import{_ as i,c as e,a,o as t}from"./app-CO77B8re.js";const n={};function l(h,s){return t(),e("div",null,s[0]||(s[0]=[a('<h3 id="docker数据卷" tabindex="-1"><a class="header-anchor" href="#docker数据卷"><span>docker数据卷</span></a></h3><h4 id="基本介绍" tabindex="-1"><a class="header-anchor" href="#基本介绍"><span>基本介绍：</span></a></h4><p>就是目录或文件，存在于一个或多个容器中，由docker挂载到容器，但不属于联合文件系统，因此能够绕过Union File System提供一些用于持续存储或共享数据的特性。卷的设计目的就是数据的持久化，将docker容器内的数据保存进宿主机的磁盘中，完全独立于容器的生命周期，因此Docker不会在容器删除时删除其挂载的数据卷。</p><h4 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景：</span></a></h4><p>将应用与运行的环境打包为镜像，run后形成容器实例运行，但是我们对应用产生的数据要求是持久化的。Docker容器产生的数据，如果不备份，那么当容器实例删除后，容器内的数据也随之删除。为了能持久化在docker中产生的数据我们使用卷来挂在容器中的目录或文件。</p><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点：</span></a></h4><p>1、数据卷可在容器之间共享或重用数据</p><p>2、卷中的更改可以直接实时生效</p><p>3、数据卷中的更改不会包含在镜像的更新中</p><p>4、数据卷的生命周期一直持续到没有容器使用它为止</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用：</span></a></h4><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --privileged=true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [/宿主机绝对路径目录]:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/容器内目录</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">镜像名</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明：</span></a></h4><p>--privileged=true：</p><p>异常情况：Docker挂载主机目录访问如果出现cannot open directory .: Permission denied</p><p>解决办法：在挂载目录后多加一个--privileged=true参数即可</p><p>原因：CentOS7安全模块会比之前系统版本加强，不安全的会先禁止，所以目录挂载的情况被默认为不安全的行为，在SELinux里面挂载目录默认是被禁止的，如果要开启，我们一般使用--privileged=true命令，扩大容器的权限解决挂载目录没有权限的问题，也即使用该参数，container内的root拥有真正的root权限，否则，container内的root只是外部的一个普通用户权限。</p><h4 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例"><span>使用案例：</span></a></h4><p>宿主机和容器间映射添加容器卷：</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my_ubuntu</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --privileged=true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /tmp/myHostData:/tmp/myDockerData</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ubuntu</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看目录挂在是否正常：</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> inspect</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [容器ID]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看Mounts信息，查看目录挂载情况。</p><p>测试数据共享：</p><p>1、在容器中修改文件内容，宿主机立即生效</p><p>2、宿主机上修改文件内容，容器中立即生效</p><p>3、停止容器，宿主机修改文件内容，容器再次启动，文件内容正常同步</p><h4 id="数据卷的读写规则" tabindex="-1"><a class="header-anchor" href="#数据卷的读写规则"><span>数据卷的读写规则：</span></a></h4><p>读写（默认）：</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --privileged=true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /宿主机绝对路径目录:/容器内目录:rw</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [镜像名]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不写默认即是可读可写。</p><p>只读（ro）：</p><p>容器实例内部被限制，只能读取不能写</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --privileged=true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /宿主机绝对路径目录:/容器内目录:ro</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [镜像名]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="数据卷的继承和共享" tabindex="-1"><a class="header-anchor" href="#数据卷的继承和共享"><span>数据卷的继承和共享：</span></a></h4><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">  --privileged=true</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --volumes-from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [父容器]  --name u2 ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>说明：容器卷继承后与原容器的数据卷映射互不影响，及时原来容器删除也不会影响当前容器与宿主机目录映射。</p>',37)]))}const r=i(n,[["render",l],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/devops/volumes/","title":"docker容器卷","lang":"zh-CN","frontmatter":{"title":"docker容器卷","createTime":"2025/03/11 22:18:27","permalink":"/devops/volumes/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":3,"title":"docker数据卷","slug":"docker数据卷","link":"#docker数据卷","children":[]}],"readingTime":{"minutes":2.78,"words":833},"git":{"createdTime":1742137905000,"updatedTime":1742137905000,"contributors":[{"name":"yongjun","email":"1640808365@qq.com","commits":1}]},"filePathRelative":"notes/devops/docker/docker容器卷.md"}`);export{r as comp,p as data};
